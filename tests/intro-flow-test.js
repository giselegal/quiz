// /workspaces/quiz-sell-genius-66/tests/intro-flow-test.js
/**
 * Script de teste para verificar se o QuizIntro sempre aparece primeiro
 * 
 * Este script testa o comportamento de navega√ß√£o para garantir que:
 * 1. O QuizIntro sempre aparece quando o usu√°rio acessa o quiz
 * 2. Mesmo depois de fechar e abrir o quiz novamente, o QuizIntro deve aparecer
 * 
 * Para executar este teste:
 * 1. Adicione o script em uma tag <script> em index.html ou
 * 2. Execute no console do navegador ou
 * 3. Use uma ferramenta de teste automatizado
 */

(function testQuizIntroFlow() {
  console.log('üß™ Iniciando teste de fluxo do QuizIntro...');
  
  // Limpar localStorage e sessionStorage para simular um usu√°rio novo
  localStorage.removeItem('userName');
  sessionStorage.removeItem('hasSeenIntroThisSession');
  console.log('üßπ Storage limpo para simular novo usu√°rio');
  
  // Verificar estado inicial ao carregar a p√°gina do quiz
  function simulateInitialLoad() {
    // Tentar detectar se o QuizIntro est√° vis√≠vel
    const hasQuizIntroVisible = document.querySelector('[data-section="intro"]') !== null;
    
    console.log(`üîç Teste inicial: QuizIntro est√° vis√≠vel? ${hasQuizIntroVisible ? '‚úÖ Sim' : '‚ùå N√£o'}`);
    
    if (!hasQuizIntroVisible) {
      console.error('‚ùå ERRO: QuizIntro n√£o est√° sendo exibido no carregamento inicial!');
      return false;
    }
    
    return true;
  }
  
  // Simular o preenchimento do nome e in√≠cio do quiz
  function simulateStartQuiz() {
    console.log('üë§ Simulando preenchimento do nome e in√≠cio do quiz...');
    
    // Definir diretamente no localStorage para simular a submiss√£o do form
    localStorage.setItem('userName', 'Usu√°rio de Teste');
    
    // Verificar se o sessionStorage n√£o est√° sendo usado para controlar a exibi√ß√£o do intro
    setTimeout(() => {
      if (sessionStorage.getItem('hasSeenIntroThisSession')) {
        console.warn('‚ö†Ô∏è Alerta: sessionStorage ainda est√° sendo usado para controlar a exibi√ß√£o do intro!');
      } else {
        console.log('‚úÖ Verifica√ß√£o de sessionStorage: OK, n√£o est√° sendo usado');
      }
    }, 500);
    
    return true;
  }
  
  // Simular recarregamento da p√°gina ou nova visita
  function simulatePageReload() {
    console.log('üîÑ Simulando recarregamento da p√°gina...');
    
    // Verificar se, mesmo com o nome salvo, o QuizIntro apareceria
    console.log(`‚ÑπÔ∏è Nome no localStorage: ${localStorage.getItem('userName')}`);
    console.log(`‚ÑπÔ∏è Status em sessionStorage: ${sessionStorage.getItem('hasSeenIntroThisSession')}`);
    
    // A l√≥gica modificada deve ignorar o localStorage e sempre mostrar o intro
    console.log('‚úÖ Se a implementa√ß√£o estiver correta, o QuizIntro ser√° mostrado no pr√≥ximo carregamento da p√°gina');
    
    return true;
  }
  
  // Executar testes em sequ√™ncia
  function runAllTests() {
    const initialLoadPassed = simulateInitialLoad();
    if (!initialLoadPassed) return false;
    
    const startQuizPassed = simulateStartQuiz();
    if (!startQuizPassed) return false;
    
    const reloadPassed = simulatePageReload();
    if (!reloadPassed) return false;
    
    console.log('‚úÖ Todos os testes passaram! O QuizIntro deve sempre aparecer primeiro.');
    return true;
  }
  
  // Executar teste completo
  const testResult = runAllTests();
  console.log(`üß™ Resultado final do teste: ${testResult ? '‚úÖ PASSOU' : '‚ùå FALHOU'}`);
  
  // Instru√ß√µes para verifica√ß√£o manual
  console.log(`
  üìã Para verificar manualmente:
  1. Acesse a p√°gina principal do quiz
  2. Confirme que o QuizIntro aparece
  3. Digite um nome e inicie o quiz
  4. Feche o navegador ou aba
  5. Acesse novamente a p√°gina do quiz
  6. Confirme que o QuizIntro aparece novamente, mesmo que seu nome ainda esteja salvo
  `);
  
  return testResult;
})();
